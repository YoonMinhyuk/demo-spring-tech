plugins {
    id 'org.springframework.boot' version '2.4.0' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
    id 'java-library'
}

subprojects {
    apply(plugin: 'org.springframework.boot')
    apply(plugin: 'io.spring.dependency-management')
    apply(plugin: 'java-library')

    group = 'me.demo'
    version = '1.0.0'
    sourceCompatibility = JavaVersion.VERSION_15
    targetCompatibility = JavaVersion.VERSION_15

    final IS_EUREKA_SERVER = project.name == 'eureka-server'
    final IS_API_GATEWAY = project.name == 'zuul-gateway'
    final IS_DOMAIN_MODULE = project.name.endsWith('domain')
    final IS_WEB_MODULE = project.name.endsWith('web')

    configurations {
        all {
            if (!IS_EUREKA_SERVER && !IS_API_GATEWAY) {
                exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
            }
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        if (!IS_EUREKA_SERVER && !IS_API_GATEWAY) {
            implementation 'org.springframework.boot:spring-boot-starter'
            compileOnly 'org.projectlombok:lombok'
            annotationProcessor 'org.projectlombok:lombok'
            annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
            testImplementation 'org.springframework.boot:spring-boot-starter-test'
            testCompileOnly 'org.projectlombok:lombok'
            testAnnotationProcessor 'org.projectlombok:lombok'
        }

        if (IS_WEB_MODULE) {
            implementation 'org.springframework.boot:spring-boot-starter-webflux'
            implementation 'org.springframework.boot:spring-boot-starter-hateoas'
            implementation 'org.springframework.boot:spring-boot-starter-validation'
            testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
            testImplementation 'io.projectreactor:reactor-test'
            if (project.name != 'basic-web') {
                implementation project(':basic-web')
            }
        }

        if (IS_DOMAIN_MODULE) {
            runtimeOnly 'com.h2database:h2'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            implementation 'com.querydsl:querydsl-jpa'
            // Querydsl JPAAnnotationProcessor 지정
            annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
            //java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
            annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
            //java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
            annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
            if (project.name != 'basic-domain') {
                api project(':basic-domain')
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    if (IS_DOMAIN_MODULE) {
        bootJar {
            enabled = false
        }

        jar {
            enabled = true
        }
    }
}